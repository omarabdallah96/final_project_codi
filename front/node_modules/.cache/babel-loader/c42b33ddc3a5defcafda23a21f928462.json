{"ast":null,"code":"var _jsxFileName = \"/home/omar/codi/final/front/src/components/session/SessionProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport SessionContext from \"./SessionContext\";\nimport { setCookie, getCookie, removeCookie } from \"../../cookies\";\nimport { toast } from \"react-toastify\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SessionProvider({\n  children\n}) {\n  _s();\n\n  let token = getCookie(\"token\");\n  const [loggedin, setLoggedin] = useState(false);\n  const [session, setValue] = useState({\n    user: {\n      token: getCookie(\"token\")\n    }\n  });\n  useEffect(() => {\n    function initializeSession() {\n      let token = getCookie(\"token\");\n      if (token) fetch(`http://127.0.0.1:8000/api/user`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(res => res.json()).then(res => {\n        if (!res) {\n          return /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 22\n          }, this);\n        }\n\n        let role = res.role;\n        let user = { ...res,\n          token,\n          role\n        };\n        setLoggedin(true);\n        updateSession({\n          user\n        });\n      });\n    }\n\n    initializeSession();\n  }, [token]);\n\n  function updateSession(nextSession) {\n    let value = typeof nextSession === \"function\" ? nextSession : prevSession => ({ ...prevSession,\n      ...nextSession\n    });\n    setValue(value);\n  }\n\n  async function login({\n    email,\n    password\n  }) {\n    // try to login\n    let {\n      error,\n      id = 4,\n      token\n    } = await fetch(\"http://127.0.0.1:8000/api/login\", {\n      method: \"post\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(res => res.json()); // return from the function if you have an error\n    // if (disabled || !token) return toast.error(disabled);\n\n    if (error || !token) return toast.error(error); // get the data of the loggedin user\n\n    setCookie(\"token\", token);\n    setCookie(\"id\", id);\n    let result = await fetch(`http://127.0.0.1:8000/api/user`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => res.json());\n    let role = result.role;\n    console.log(result);\n\n    if (!result) {\n      logout();\n    }\n\n    let user = { ...result,\n      token,\n      role\n    };\n    updateSession({\n      user\n    }); // toast(`Welcome ${user.name}!`);\n  }\n\n  function logout() {\n    setLoggedin(false);\n    updateSession({\n      user: {\n        token: null\n      }\n    });\n    removeCookie(\"id\");\n    removeCookie(\"token\");\n  }\n\n  async function register(email, username, password) {\n    let req = {\n      username: username,\n      email: email,\n      password: password,\n      role: \"user\",\n      name: \"\",\n      lastname: \"\",\n      status: \"active\",\n      address: \"lebanon\",\n      phone: \"0\"\n    };\n    let body = {\n      \"username\": \"12\",\n      \"email\": \"omar\",\n      \"photo\": \"kgOrcxjkELpYSGkSj2fsvRuAqICRZm1n5FUqyc3S.png\",\n      password: password\n    };\n    console.log(req);\n    let result = await axios.post(\"http://127.0.0.1:8000/api/u\", body);\n    console.log(result); // return from the function if you have an error\n    // if (error || !token) return toast.error(error);\n  }\n\n  const context = {\n    session,\n    actions: {\n      login,\n      logout,\n      register,\n      loggedin\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(SessionContext.Provider, {\n    value: context,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SessionProvider, \"2zZoL39QQOWqw88HdYJwpmAaZOE=\");\n\n_c = SessionProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"SessionProvider\");","map":{"version":3,"sources":["/home/omar/codi/final/front/src/components/session/SessionProvider.js"],"names":["React","useState","useEffect","SessionContext","setCookie","getCookie","removeCookie","toast","axios","Redirect","SessionProvider","children","token","loggedin","setLoggedin","session","setValue","user","initializeSession","fetch","headers","Authorization","then","res","json","role","updateSession","nextSession","value","prevSession","login","email","password","error","id","method","body","JSON","stringify","result","console","log","logout","register","username","req","name","lastname","status","address","phone","post","context","actions"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport SessionContext from \"./SessionContext\";\nimport { setCookie, getCookie, removeCookie } from \"../../cookies\";\nimport { toast } from \"react-toastify\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router\";\n\nexport default function SessionProvider({ children }) {\n  let token = getCookie(\"token\");\n  const [loggedin, setLoggedin] = useState(false);\n  const [session, setValue] = useState({\n    user: {\n      token: getCookie(\"token\"),\n    },\n  });\n\n  useEffect(() => {\n    function initializeSession() {\n      let token = getCookie(\"token\");\n      if (token)\n        fetch(`http://127.0.0.1:8000/api/user`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        })\n          .then((res) => res.json())\n          .then((res) => {\n            if (!res) {\n              return <Redirect to=\"/account\" />;\n            }\n            let role=res.role\n\n            let user = { ...res, token ,role};\n            setLoggedin(true);\n            updateSession({ user });\n          });\n    }\n    initializeSession();\n  }, [token]);\n\n  function updateSession(nextSession) {\n    let value =\n      typeof nextSession === \"function\"\n        ? nextSession\n        : (prevSession) => ({ ...prevSession, ...nextSession });\n    setValue(value);\n  }\n\n  async function login({ email, password }) {\n    // try to login\n    let {\n      error,id = 4,\n      token,\n    } = await fetch(\"http://127.0.0.1:8000/api/login\", {\n      method: \"post\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password }),\n    }).then((res) => res.json());\n\n    // return from the function if you have an error\n    // if (disabled || !token) return toast.error(disabled);\n\n    if (error || !token) return toast.error(error);\n\n    // get the data of the loggedin user\n    setCookie(\"token\", token);\n    setCookie(\"id\", id);\n\n    let result = await fetch(`http://127.0.0.1:8000/api/user`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    }).then((res) => res.json());\n    let role = result.role;\n    console.log(result);\n    if (!result) {\n      logout()\n    }\n\n    let user = { ...result, token, role };\n\n    updateSession({ user });\n    // toast(`Welcome ${user.name}!`);\n  }\n\n  function logout() {\n    setLoggedin(false);\n    updateSession({ user: { token: null } });\n    removeCookie(\"id\");\n    removeCookie(\"token\");\n  }\n  async function register(email, username, password) {\n    let req = {\n      username: username,\n      email: email,\n      password: password,\n      role: \"user\",\n      name: \"\",\n      lastname: \"\",\n      status: \"active\",\n      address: \"lebanon\",\n      phone: \"0\",\n    };\n    let body={\n      \"username\": \"12\",\n        \"email\": \"omar\",\n        \"photo\": \"kgOrcxjkELpYSGkSj2fsvRuAqICRZm1n5FUqyc3S.png\",\n        password: password,\n\n    }\n    console.log(req);\n    let result = await axios.post(\"http://127.0.0.1:8000/api/u\", body);\n\n    console.log(result);\n\n    // return from the function if you have an error\n    // if (error || !token) return toast.error(error);\n  }\n\n  const context = {\n    session,\n    actions: {\n      login,\n      logout,\n      register,\n      loggedin,\n    },\n  };\n\n  return (\n    <SessionContext.Provider value={context}>\n      {children}\n    </SessionContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}