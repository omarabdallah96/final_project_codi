{"ast":null,"code":"TweenMax.set('#circlePath', {\n  attr: {\n    r: document.querySelector('#mainCircle').getAttribute('r')\n  }\n});\nMorphSVGPlugin.convertToPath('#circlePath');\n\nvar xmlns = \"http://www.w3.org/2000/svg\",\n    xlinkns = \"http://www.w3.org/1999/xlink\",\n    select = function (s) {\n  return document.querySelector(s);\n},\n    selectAll = function (s) {\n  return document.querySelectorAll(s);\n},\n    mainCircle = select('#mainCircle'),\n    mainContainer = select('#mainContainer'),\n    plane = select('#plane'),\n    mainSVG = select('.mainSVG'),\n    mainCircleRadius = Number(mainCircle.getAttribute('r')),\n    //radius = mainCircleRadius,\nnumDots = mainCircleRadius / 2,\n    step = 360 / numDots,\n    dotMin = 0,\n    circlePath = select('#circlePath'); //\n//mainSVG.appendChild(circlePath);\n\n\nTweenMax.set('svg', {\n  visibility: 'visible'\n});\nTweenMax.set([plane], {\n  transformOrigin: '50% 50%'\n});\nvar circleBezier = MorphSVGPlugin.pathDataToBezier(circlePath.getAttribute('d'), {\n  offsetX: -19,\n  offsetY: -18\n}); //console.log(circlePath)\n\nvar mainTl = new TimelineMax();\n\nfunction makeDots() {\n  var d, angle, tl;\n\n  for (var i = 0; i < numDots; i++) {\n    d = select('#dot').cloneNode(true);\n    mainContainer.appendChild(d);\n    angle = step * i;\n    TweenMax.set(d, {\n      attr: {\n        cx: Math.cos(angle * Math.PI / 180) * mainCircleRadius + 400,\n        cy: Math.sin(angle * Math.PI / 180) * mainCircleRadius + 300\n      }\n    });\n    tl = new TimelineMax({\n      repeat: -1\n    });\n    tl.from(d, 0.2, {\n      attr: {\n        r: dotMin\n      },\n      ease: Power2.easeIn\n    }).to(d, 1.8, {\n      attr: {\n        r: dotMin\n      },\n      ease: Power2.easeOut\n    });\n    mainTl.add(tl, i / (numDots / tl.duration()));\n  }\n\n  var planeTl = new TimelineMax({\n    repeat: -1\n  });\n  planeTl.to(plane, tl.duration(), {\n    bezier: {\n      type: \"cubic\",\n      values: circleBezier,\n      autoRotate: true\n    },\n    ease: Linear.easeNone\n  });\n  mainTl.add(planeTl, 0.05);\n}\n\nmakeDots();\nmainTl.time(20);\nTweenMax.to(mainContainer, 30, {\n  rotation: -360,\n  svgOrigin: '400 300',\n  repeat: -1,\n  ease: Linear.easeNone\n});\nmainTl.timeScale(1.6);","map":{"version":3,"sources":["/home/omar/codi/final/front/src/components/Loading/plane.js"],"names":["TweenMax","set","attr","r","document","querySelector","getAttribute","MorphSVGPlugin","convertToPath","xmlns","xlinkns","select","s","selectAll","querySelectorAll","mainCircle","mainContainer","plane","mainSVG","mainCircleRadius","Number","numDots","step","dotMin","circlePath","visibility","transformOrigin","circleBezier","pathDataToBezier","offsetX","offsetY","mainTl","TimelineMax","makeDots","d","angle","tl","i","cloneNode","appendChild","cx","Math","cos","PI","cy","sin","repeat","from","ease","Power2","easeIn","to","easeOut","add","duration","planeTl","bezier","type","values","autoRotate","Linear","easeNone","time","rotation","svgOrigin","timeScale"],"mappings":"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","sourcesContent":["TweenMax.set('#circlePath', {\n    attr: {\n      r: document.querySelector('#mainCircle').getAttribute('r')\n    }\n  })\n  MorphSVGPlugin.convertToPath('#circlePath');\n  \n  var xmlns = \"http://www.w3.org/2000/svg\",\n    xlinkns = \"http://www.w3.org/1999/xlink\",\n    select = function(s) {\n      return document.querySelector(s);\n    },\n    selectAll = function(s) {\n      return document.querySelectorAll(s);\n    },\n    mainCircle = select('#mainCircle'),\n    mainContainer = select('#mainContainer'),\n    plane = select('#plane'),\n    mainSVG = select('.mainSVG'),\n    mainCircleRadius = Number(mainCircle.getAttribute('r')),\n    //radius = mainCircleRadius,\n    numDots = mainCircleRadius / 2,\n    step = 360 / numDots,\n    dotMin = 0,\n    circlePath = select('#circlePath')\n  \n  //\n  //mainSVG.appendChild(circlePath);\n  TweenMax.set('svg', {\n    visibility: 'visible'\n  })\n  TweenMax.set([plane], {\n    transformOrigin: '50% 50%'\n  })\n  \n  var circleBezier = MorphSVGPlugin.pathDataToBezier(circlePath.getAttribute('d'), {\n    offsetX: -19,\n    offsetY: -18\n  })\n  \n  //console.log(circlePath)\n  var mainTl = new TimelineMax();\n  \n  function makeDots() {\n    var d, angle, tl;\n    for (var i = 0; i < numDots; i++) {\n  \n      d = select('#dot').cloneNode(true);\n      mainContainer.appendChild(d);\n      angle = step * i;\n      TweenMax.set(d, {\n        attr: {\n          cx: (Math.cos(angle * Math.PI / 180) * mainCircleRadius) + 400,\n          cy: (Math.sin(angle * Math.PI / 180) * mainCircleRadius) + 300\n        }\n      })\n  \n      tl = new TimelineMax({\n        repeat: -1\n      });\n      tl\n      .from(d, 0.2, {\n            attr:{\n              r:dotMin\n            },\n            ease:Power2.easeIn\n          })\n        .to(d, 1.8, {\n        attr: {\n          r: dotMin\n        },\n        ease: Power2.easeOut\n      })\n  \n      mainTl.add(tl, i / (numDots / tl.duration()))\n    }\n    var planeTl = new TimelineMax({\n      repeat: -1\n    });\n    planeTl.to(plane, tl.duration(), {\n      bezier: {\n        type: \"cubic\",\n        values: circleBezier,\n        autoRotate: true\n      },\n      ease: Linear.easeNone\n    })\n    mainTl.add(planeTl, 0.05)\n  }\n  \n  makeDots();\n  mainTl.time(20);\n  TweenMax.to(mainContainer, 30, {\n    rotation: -360,\n    svgOrigin: '400 300',\n    repeat: -1,\n    ease: Linear.easeNone\n  })\n  mainTl.timeScale(1.6);\n  "]},"metadata":{},"sourceType":"module"}