{"ast":null,"code":"var _jsxFileName = \"/home/omar/codi/final/front/src/components/session/SessionProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport SessionContext from \"./SessionContext\";\nimport { setCookie, getCookie, removeCookie } from \"../../cookies\";\nimport { toast } from \"react-toastify\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SessionProvider({\n  children\n}) {\n  _s();\n\n  let id = getCookie(\"id\");\n  let token = getCookie(\"token\");\n  const [loggedin, setLoggedin] = useState(false);\n  const [session, setValue] = useState({\n    user: {\n      token: getCookie(\"token\")\n    }\n  });\n  useEffect(() => {\n    function initializeSession() {\n      let id = getCookie('id');\n      let token = getCookie('token');\n      if (token) fetch(`http://127.0.0.1:8000/api/user`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(res => res.json()).then(res => {\n        if (!res) {\n          return /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 7\n          }, this);\n        }\n\n        let user = { ...res,\n          token\n        };\n        setLoggedin(true);\n        updateSession({\n          user\n        });\n        toast(res.id);\n      });\n    }\n\n    initializeSession();\n  }, [token]);\n\n  function updateSession(nextSession) {\n    let value = typeof nextSession === \"function\" ? nextSession : prevSession => ({ ...prevSession,\n      ...nextSession\n    });\n    setValue(value);\n  }\n\n  async function login({\n    email,\n    password\n  }) {\n    // try to login\n    let {\n      error,\n      disabled,\n      id = 4,\n      token\n    } = await fetch(\"http://127.0.0.1:8000/api/login\", {\n      method: \"post\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(res => res.json()); // return from the function if you have an error\n\n    if (disabled || !token) return toast.error(disabled);\n    if (error || !token) return toast.error(error); // get the data of the loggedin user\n\n    setCookie(\"token\", token);\n    setCookie(\"id\", id);\n    let result = await fetch(`http://127.0.0.1:8000/api/user`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => res.json());\n    let role = result.role;\n\n    if (!result) {\n      removeCookie(\"token\");\n      removeCookie(\"id\");\n    }\n\n    let user = { ...result,\n      token,\n      role\n    };\n    updateSession({\n      user\n    }); // toast(`Welcome ${user.name}!`);\n  }\n\n  function logout() {\n    setLoggedin(false);\n    updateSession({\n      user: {\n        token: null\n      }\n    });\n    removeCookie(\"id\");\n    removeCookie(\"token\");\n  }\n\n  async function register(email, username, password) {\n    let req = {\n      username: username,\n      email: email,\n      password: password,\n      role: \"user\",\n      name: \"\",\n      lastname: \"\",\n      status: \"active\",\n      photo: \"\",\n      address: \"lebanon\",\n      phone: \"0\"\n    };\n    console.log(req);\n    let result = await axios.post(\"http://127.0.0.1:8000/api/register\", req);\n    console.log(result); // return from the function if you have an error\n    // if (error || !token) return toast.error(error);\n  }\n\n  const context = {\n    session,\n    actions: {\n      login,\n      logout,\n      register,\n      loggedin\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(SessionContext.Provider, {\n    value: context,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SessionProvider, \"2zZoL39QQOWqw88HdYJwpmAaZOE=\");\n\n_c = SessionProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"SessionProvider\");","map":{"version":3,"sources":["/home/omar/codi/final/front/src/components/session/SessionProvider.js"],"names":["React","useState","useEffect","SessionContext","setCookie","getCookie","removeCookie","toast","axios","Redirect","SessionProvider","children","id","token","loggedin","setLoggedin","session","setValue","user","initializeSession","fetch","headers","Authorization","then","res","json","updateSession","nextSession","value","prevSession","login","email","password","error","disabled","method","body","JSON","stringify","result","role","logout","register","username","req","name","lastname","status","photo","address","phone","console","log","post","context","actions"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport SessionContext from \"./SessionContext\";\nimport { setCookie, getCookie, removeCookie } from \"../../cookies\";\nimport { toast } from \"react-toastify\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router\";\n\nexport default function SessionProvider({ children }) {\n  let id = getCookie(\"id\");\n  let token = getCookie(\"token\");\n  const [loggedin, setLoggedin] = useState(false);\n  const [session, setValue] = useState({\n    user: {\n      token: getCookie(\"token\"),\n    },\n  });\n\n  useEffect(() => {\n    function initializeSession() {\n      let id = getCookie('id');\n      let token = getCookie('token');\n      if (token) fetch(`http://127.0.0.1:8000/api/user`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          }\n      }).then(res => res.json()).then(res => {\n        if(!res){\n     return  (\n\n      \n      <Redirect to=\"/account\" />\n\n      )\n\n        }\n\n          let user = { ...res, token };\n          setLoggedin(true)\n          updateSession({ user });\n          toast(res.id)\n      });\n  }\n  initializeSession();\n  }, [token]);\n\n  function updateSession(nextSession) {\n    let value =\n      typeof nextSession === \"function\"\n        ? nextSession\n        : (prevSession) => ({ ...prevSession, ...nextSession });\n    setValue(value);\n  }\n\n  async function login({ email, password }) {\n    // try to login\n    let {\n      error,\n      disabled,\n      id = 4,\n      token,\n    } = await fetch(\"http://127.0.0.1:8000/api/login\", {\n      method: \"post\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password }),\n    }).then((res) => res.json());\n\n    // return from the function if you have an error\n    if (disabled || !token) return toast.error(disabled);\n\n    if (error || !token) return toast.error(error);\n\n    // get the data of the loggedin user\n    setCookie(\"token\", token);\n    setCookie(\"id\", id);\n\n    let result = await fetch(`http://127.0.0.1:8000/api/user`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    }).then((res) => res.json());\n    let role = result.role;\n    if (!result) {\n      removeCookie(\"token\");\n      removeCookie(\"id\");\n    }\n\n    let user = { ...result, token, role };\n\n    updateSession({ user });\n    // toast(`Welcome ${user.name}!`);\n  }\n\n  function logout() {\n    setLoggedin(false);\n    updateSession({ user: { token: null } });\n    removeCookie(\"id\");\n    removeCookie(\"token\");\n  }\n  async function register(email, username, password) {\n    let req = {\n      username: username,\n      email: email,\n      password: password,\n      role: \"user\",\n      name: \"\",\n      lastname: \"\",\n      status: \"active\",\n      photo: \"\",\n      address: \"lebanon\",\n      phone: \"0\",\n    };\n    console.log(req);\n    let result = await axios.post(\"http://127.0.0.1:8000/api/register\", req);\n\n    console.log(result);\n\n    // return from the function if you have an error\n    // if (error || !token) return toast.error(error);\n  }\n\n  const context = {\n    session,\n    actions: {\n      login,\n      logout,\n      register,\n      loggedin,\n    },\n  };\n\n  return (\n    <SessionContext.Provider value={context}>\n      {children}\n    </SessionContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}