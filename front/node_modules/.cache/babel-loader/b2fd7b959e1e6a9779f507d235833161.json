{"ast":null,"code":"var _jsxFileName = \"/home/omar/codi/final/front/src/pages/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport SessionContext from \"../components/session/SessionContext\";\nimport { useContext } from \"react\";\nimport { TextField } from \"@mui/material\";\nimport api from \"../components/API/API\";\nimport CountrySelect from \"../components/country/countrylist\";\nimport { Button } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  flex: {\n    display: \"grid\",\n    gridTemplateColumns: \"50% 50%\"\n  },\n  parent: {\n    marginTop: 20,\n    marginLeft: 20,\n    backgroundColor: \"white\",\n    color: \"#1976d2\"\n  },\n  root: {\n    maxWidth: 100,\n    marginBottom: 20,\n    height: 100,\n    display: \"flex\"\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\" // 16:9\n\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\"\n  },\n  avatar: {\n    backgroundColor: red[500]\n  }\n}));\nexport default function RecipeReviewCard() {\n  _s();\n\n  const [postdata, setData] = useState([]);\n\n  const getPost = async () => {\n    const {\n      data\n    } = await api.get(\"/blogs\");\n    setData(data);\n    console.log(data);\n  };\n\n  async function neworder(postid) {\n    const body = {\n      user_re_id: id,\n      post_id: postid,\n      status: 1,\n      date_order: \"2021-09-08\",\n      description: \"22\"\n    };\n    console.log(body); // await api.post(\"/orders\", body);\n  }\n\n  ;\n  const {\n    session: {\n      user\n    }\n  } = useContext(SessionContext);\n  const {\n    id,\n    email,\n    name,\n    lastname,\n    avatar\n  } = user;\n  const classes = useStyles();\n  useEffect(async () => {\n    await getPost();\n  }, []);\n  if (postdata.length > 0) return /*#__PURE__*/_jsxDEV(\"center\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.flex,\n      children: postdata.map(post => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          className: classes.parent,\n          sx: {\n            maxWidth: 345\n          },\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n              sx: {\n                bgcolor: red[500]\n              },\n              \"aria-label\": \"recipe\",\n              children: \"R\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 21\n            }, this),\n            action: /*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"settings\",\n              children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 21\n            }, this),\n            title: post.name,\n            subheader: post.date_depart\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", post.date_arrive]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [post.to_country, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 21\n              }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [post.from_country, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: post.space\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 21\n              }, this), post.note, /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  display: \"grid\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  sx: true,\n                  id: \"outlined-number\",\n                  label: \"Number\",\n                  type: \"number\",\n                  InputLabelProps: {\n                    shrink: true\n                  },\n                  onInput: e => {\n                    e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, 2);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: id => neworder(post.id),\n                  variant: \"contained\",\n                  color: \"primary\",\n                  children: \"order\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 7\n  }, this);else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(RecipeReviewCard, \"K9WCXXjTnQUDk2ikTVn/MSAXfTA=\", false, function () {\n  return [useStyles];\n});\n\n_c = RecipeReviewCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeReviewCard\");","map":{"version":3,"sources":["/home/omar/codi/final/front/src/pages/Home.js"],"names":["React","useEffect","useState","makeStyles","clsx","Card","CardHeader","CardMedia","CardContent","CardActions","Collapse","Avatar","IconButton","Typography","red","FavoriteIcon","ShareIcon","ExpandMoreIcon","MoreVertIcon","SessionContext","useContext","TextField","api","CountrySelect","Button","useStyles","theme","flex","display","gridTemplateColumns","parent","marginTop","marginLeft","backgroundColor","color","root","maxWidth","marginBottom","height","media","paddingTop","expand","transform","transition","transitions","create","duration","shortest","expandOpen","avatar","RecipeReviewCard","postdata","setData","getPost","data","get","console","log","neworder","postid","body","user_re_id","id","post_id","status","date_order","description","session","user","email","name","lastname","classes","length","map","post","bgcolor","date_depart","date_arrive","to_country","from_country","space","note","shrink","e","target","value","Math","max","parseInt","toString","slice"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport SessionContext from \"../components/session/SessionContext\";\nimport { useContext } from \"react\";\nimport { TextField } from \"@mui/material\";\nimport api from \"../components/API/API\";\nimport CountrySelect from \"../components/country/countrylist\";\nimport { Button } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  flex: {\n    display: \"grid\",\n    gridTemplateColumns: \"50% 50%\",\n  },\n\n  parent: {\n    marginTop: 20,\n    marginLeft: 20,\n    backgroundColor: \"white\",\n    color: \"#1976d2\",\n  },\n  root: {\n    maxWidth: 100,\n    marginBottom: 20,\n    height: 100,\n    display: \"flex\",\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\", // 16:9\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\n\nexport default function RecipeReviewCard() {\n  const [postdata, setData] = useState([]);\n  const getPost = async () => {\n    const { data } = await api.get(\"/blogs\");\n    setData(data);\n\n    console.log(data);\n  };\n  async function neworder (postid) {\n    const body = {\n      user_re_id: id,\n      post_id: postid,\n      status: 1,\n      date_order: \"2021-09-08\",\n      description: \"22\",\n    };\n    console.log(body);\n    // await api.post(\"/orders\", body);\n  };\n\n  const {\n    session: { user },\n  } = useContext(SessionContext);\n\n  const { id, email, name, lastname, avatar } = user;\n  const classes = useStyles();\n\n  useEffect(async () => {\n    await getPost();\n  }, []);\n  if (postdata.length > 0)\n    return (\n      <center>\n        <br />\n        <br />\n        <br />\n\n        <div className={classes.flex}>\n          {postdata.map((post) => {\n            return (\n              <Card className={classes.parent} sx={{ maxWidth: 345 }}>\n                <CardHeader\n                  avatar={\n                    <Avatar sx={{ bgcolor: red[500] }} aria-label=\"recipe\">\n                      R\n                    </Avatar>\n                  }\n                  action={\n                    <IconButton aria-label=\"settings\">\n                      <MoreVertIcon />\n                    </IconButton>\n                  }\n                  title={post.name}\n                  subheader={post.date_depart}\n                />\n\n                <CardContent>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    <td> {post.date_arrive}</td>\n                    <br />\n                    <td>{post.to_country} </td>&nbsp;\n                    <td>{post.from_country} </td>\n                    <br />\n                    <td>{post.space}</td>\n                    {post.note}\n                    <td style={{ display: \"grid\" }}>\n                      <TextField\n                        sx\n                        id=\"outlined-number\"\n                        label=\"Number\"\n                        type=\"number\"\n                        InputLabelProps={{\n                          shrink: true,\n                        }}\n                        onInput={(e) => {\n                          e.target.value = Math.max(0, parseInt(e.target.value))\n                            .toString()\n                            .slice(0, 2);\n                        }}\n                      />\n\n                      <br />\n                      <Button\n                        onClick={(id)=>neworder(post.id)}\n                        variant=\"contained\"\n                        color=\"primary\"\n                      >\n                        order\n                      </Button>\n                    </td>\n                  </Typography>\n                </CardContent>\n              </Card>\n            );\n          })}\n        </div>\n      </center>\n    );\n  else {\n    return (\n      <div>\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br /> <div>Loading</div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}