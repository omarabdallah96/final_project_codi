[{"/home/omar/codi/final/front/src/index.js":"1","/home/omar/codi/final/front/src/App.js":"2","/home/omar/codi/final/front/src/reportWebVitals.js":"3","/home/omar/codi/final/front/src/components/Routes.js":"4","/home/omar/codi/final/front/src/components/Header.js":"5","/home/omar/codi/final/front/src/components/session/SessionProvider.js":"6","/home/omar/codi/final/front/src/components/session/SessionContext.js":"7","/home/omar/codi/final/front/src/cookies.js":"8","/home/omar/codi/final/front/src/pages/NotFound.js":"9","/home/omar/codi/final/front/src/pages/Account.js":"10","/home/omar/codi/final/front/src/pages/Profile/Profile.js":"11","/home/omar/codi/final/front/src/components/country/countrylist.js":"12","/home/omar/codi/final/front/src/components/API/API.js":"13","/home/omar/codi/final/front/src/pages/Register/Register.js":"14","/home/omar/codi/final/front/src/pages/Home/Home.js":"15","/home/omar/codi/final/front/src/pages/Post/Createpost.js":"16","/home/omar/codi/final/front/src/components/API/Storage.js":"17","/home/omar/codi/final/front/src/components/API/sessionapi.js":"18","/home/omar/codi/final/front/src/components/Loading/Loading.js":"19","/home/omar/codi/final/front/src/components/Loading/Loading2.js":"20","/home/omar/codi/final/front/src/components/Style/Style.js":"21","/home/omar/codi/final/front/src/components/OrderCard/OrderCard.js":"22"},{"size":567,"mtime":1631712288351,"results":"23","hashOfConfig":"24"},{"size":533,"mtime":1631712288351,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1631712288351,"results":"26","hashOfConfig":"24"},{"size":2429,"mtime":1632564018802,"results":"27","hashOfConfig":"24"},{"size":1690,"mtime":1632202000917,"results":"28","hashOfConfig":"24"},{"size":3456,"mtime":1632664503507,"results":"29","hashOfConfig":"24"},{"size":109,"mtime":1632303675189,"results":"30","hashOfConfig":"24"},{"size":783,"mtime":1631712288351,"results":"31","hashOfConfig":"24"},{"size":258,"mtime":1631712288351,"results":"32","hashOfConfig":"24"},{"size":10389,"mtime":1632338890527,"results":"33","hashOfConfig":"24"},{"size":9413,"mtime":1632662423104,"results":"34","hashOfConfig":"24"},{"size":15501,"mtime":1632474553851,"results":"35","hashOfConfig":"24"},{"size":303,"mtime":1632659498263,"results":"36","hashOfConfig":"24"},{"size":3419,"mtime":1632037204337,"results":"37","hashOfConfig":"24"},{"size":4282,"mtime":1632682366681,"results":"38","hashOfConfig":"24"},{"size":5801,"mtime":1632660830011,"results":"39","hashOfConfig":"24"},{"size":146,"mtime":1632659439182,"results":"40","hashOfConfig":"24"},{"size":109,"mtime":1632659459126,"results":"41","hashOfConfig":"24"},{"size":377,"mtime":1632339598223,"results":"42","hashOfConfig":"24"},{"size":492,"mtime":1632566618818,"results":"43","hashOfConfig":"24"},{"size":610,"mtime":1632563954708,"results":"44","hashOfConfig":"24"},{"size":3121,"mtime":1632682657318,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"lyzmcz",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},"/home/omar/codi/final/front/src/index.js",[],["97","98"],"/home/omar/codi/final/front/src/App.js",[],"/home/omar/codi/final/front/src/reportWebVitals.js",[],"/home/omar/codi/final/front/src/components/Routes.js",[],"/home/omar/codi/final/front/src/components/Header.js",[],"/home/omar/codi/final/front/src/components/session/SessionProvider.js",["99"],"import React, { useState, useEffect } from \"react\";\nimport SessionContext from \"./SessionContext\";\nimport { setCookie, getCookie, removeCookie } from \"../../cookies\";\nimport { toast } from \"react-toastify\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router\";\nimport sessionapi from '../API/sessionapi'\n\nexport default function SessionProvider({ children }) {\n  let token = getCookie(\"token\");\n  const [loggedin, setLoggedin] = useState(false);\n  const [session, setValue] = useState({\n    user: {\n      token: getCookie(\"token\"),\n    },\n  });\n\n  useEffect(() => {\n    function initializeSession() {\n      let token = getCookie(\"token\");\n      if (token)\n        fetch(`${sessionapi}api/user`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        })\n          .then((res) => res.json())\n          .then((res) => {\n            if (!res) {\n              return <Redirect to=\"/account\" />;\n            }\n            let role=res.role\n\n            let user = { ...res, token ,role};\n            setLoggedin(true);\n            updateSession({ user });\n          });\n    }\n    initializeSession();\n  }, [token]);\n\n  function updateSession(nextSession) {\n    let value =\n      typeof nextSession === \"function\"\n        ? nextSession\n        : (prevSession) => ({ ...prevSession, ...nextSession });\n    setValue(value);\n  }\n\n  async function login({ email, password }) {\n    // try to login\n    let {\n      error,id = 4,\n      token,\n    } = await fetch(`${sessionapi}api/login`, {\n      method: \"post\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password }),\n    }).then((res) => res.json());\n    \n\n    // return from the function if you have an error\n    // if (disabled || !token) return toast.error(disabled);\n\n    if (error || !token) return toast.error(error);\n\n    // get the data of the loggedin user\n    setCookie(\"token\", token);\n    setCookie(\"id\", id);\n\n    let result = await fetch(`${sessionapi}api/user`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    }).then((res) => res.json());\n    let role = result.role;\n    console.log(result);\n    if (!result) {\n      logout()\n    }\n\n    let user = { ...result, token, role };\n\n    updateSession({ user });\n    // toast(`Welcome ${user.name}!`);\n  }\n\n  function logout() {\n    setLoggedin(false);\n    removeCookie(\"id\");\n    removeCookie(\"token\");\n    updateSession({ user: { token: null } });\n\n  }\n  async function register(email, username, password) {\n    let req = {\n      username: username,\n      email: email,\n      password: password,\n      role: \"user\",\n      name: \"\",\n      lastname: \"\",\n      status: \"active\",\n      address: \"lebanon\",\n      phone: \"0\",\n      photo: \"kgOrcxjkELpYSGkSj2fsvRuAqICRZm1n5FUqyc3S.png\",\n\n    };\n    let body={\n      \"username\": \"12\",\n        \"email\": \"omar\",\n        \"photo\": \"kgOrcxjkELpYSGkSj2fsvRuAqICRZm1n5FUqyc3S.png\",\n        password: password,\n\n    }\n    console.log(req);\n    let result = await axios.post(`${sessionapi}api/uploadimage`, req);\n\n    console.log(result);\n\n    // return from the function if you have an error\n    // if (error || !token) return toast.error(error);\n  }\n\n  const context = {\n    session,\n    actions: {\n      login,\n      logout,\n      register,\n      loggedin,\n    },\n  };\n\n  return (\n    <SessionContext.Provider value={context}>\n      {children}\n    </SessionContext.Provider>\n  );\n}\n","/home/omar/codi/final/front/src/components/session/SessionContext.js",[],"/home/omar/codi/final/front/src/cookies.js",[],"/home/omar/codi/final/front/src/pages/NotFound.js",[],"/home/omar/codi/final/front/src/pages/Account.js",["100","101","102","103"],"import Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport React, { useContext, useState } from \"react\";\nimport SessionContext from \"../components/session/SessionContext\";\nimport travel from \"../assets/travel.png\";\nimport api from \"../components/API/API\";\nimport CountrySelect from \"../components/country/countrylist\";\nimport { Box } from \"@mui/system\";\nimport AddPhotoAlternateOutlinedIcon from '@mui/icons-material/AddPhotoAlternateOutlined';\nimport { toast } from \"react-toastify\";\nimport Loading from \"../components/Loading/Loading\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    backgroundColor: \"#1976d2\",\n    color: \"white\",\n    \"&:hover\": {\n      color: \"black\",\n    },\n  },\n  link: {\n    color: \"#146eb4\",\n  },\n}));\n\nexport default function SignIn() {\n  const [account, setaccount] = useState(true);\n  const [selectdcountry, setCountry] = useState(\"\");\n  const toggle = () => {\n    if (account) {\n      setaccount(false);\n\n      return;\n    } else {\n      setaccount(true);\n    }\n  };\n\n  const classes = useStyles();\n  const {\n    actions: { login, register },\n  } = useContext(SessionContext);\n\n  const [state, setValue] = useState({\n    email: \"\",\n    password: \"\",\n    regpassword: \"\",\n    regemail: \"\",\n    regusername: \"\",\n    phone: \"\",\n\n    photo: \"\",\n    reglastname: \"\",\n  });\n\n  const {\n    email,\n    password,\n    regemail,\n    regusername,\n    regpassword,\n    photo,\n    regname,\n    reglastname,\n    regcountry,\n    phone,\n  } = state;\n\n  function setState(nextState) {\n    setValue((prevState) => ({\n      ...prevState,\n      ...nextState,\n    }));\n  }\n\n  function handleChange(e) {\n    let { name, value } = e.target;\n    setState({ [name]: value });\n  }\n\n  async function handleLogin(e) {\n    e.nativeEvent.preventDefault();\n    login(state);\n  }\n\n  const handleRegister = async (event) => {\n    event.preventDefault();\n    const fileInput = document.querySelector(\"#photo\");\n    const formData = new FormData();\n    formData.append(\"name\", regname);\n    formData.append(\"lastname\", reglastname);\n    formData.append(\"username\", regusername);\n    formData.append(\"phone\", phone);\n\n    formData.append(\"email\", regemail);\n    formData.append(\"password\", regpassword);\n    formData.append(\"status\", \"active\");\n\n    formData.append(\"photo\", fileInput.files[0]);\n    formData.append(\"role\", \"user\");\n\n    formData.append(\"address\", selectdcountry);\n    const body = {\n      name: regname,\n      lastname: reglastname,\n      username: regusername,\n      phone: phone,\n      email: regemail,\n      password: regpassword,\n      status: regpassword,\n      photo: fileInput,\n      role: \"user\",\n    };\n    try {\n      await api.post(\"/uploadimage\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n      setaccount(true);\n      toast.success(\"saved\")\n      \n    } catch (error) {\n      toast.error(\"Please Your Inputs\")\n\n      \n    }\n\n  \n  };\n\n  return (\n    <div>\n      {account ? (\n        <Container className={classes.root} component=\"main\" maxWidth=\"xs\">\n          <CssBaseline />\n\n          <div className={classes.paper}>\n            {/* <Avatar className={classes.avatar}>\n          </Avatar> */}\n            <img src={travel} alt=\"\" style={{ maxHeight: 100 }} srcset=\"\" />\n            <Typography component=\"h1\" variant=\"h5\">\n              Log In To Your Account\n            </Typography>\n            <form onSubmit={handleLogin} className={classes.form}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                autoComplete=\"off\"\n                autoFocus\n                name=\"email\"\n                value={email}\n                onChange={handleChange}\n              />\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                name=\"password\"\n                value={password}\n                onChange={handleChange}\n              />\n\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                className={classes.submit}\n              >\n                Sign In\n              </Button>\n              <Grid className={classes.link}>\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  onClick={toggle}\n                  variant=\"contained\"\n                  className={classes.submit}\n                >\n                  Create new user\n                </Button>\n              </Grid>\n            </form>\n          </div>\n        </Container>\n      ) : (\n        <Container className={classes.root} component=\"main\" maxWidth=\"xs\">\n          <CssBaseline />\n          <div className={classes.paper}>\n            <Avatar className={classes.avatar}>\n            </Avatar>\n            \n            <Typography component=\"h1\" variant=\"h5\">\n              Create New Account\n            </Typography>\n            <form\n              onSubmit={handleRegister}\n              enctype=\"multipart/form-data\"\n              className={classes.form}\n            >\n              <Box style={{display:\"flex\"}}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                \n                label=\"First Name\"\n                autoComplete=\"off\"\n                autoFocus\n                name=\"regname\"\n                value={regname}\n                onChange={handleChange}\n              />\n              &nbsp;\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                label=\"Last Name\"\n                autoComplete=\"off\"\n                \n                name=\"reglastname\"\n                value={reglastname}\n                onChange={handleChange}\n              />\n\n              </Box>\n             \n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                autoComplete=\"off\"\n                \n                name=\"regemail\"\n                value={regemail}\n                onChange={handleChange}\n              />\n              <Box style={{display:\"flex\" ,alignItems:\"center\"}}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                label=\"Username\"\n                type=\"text\"\n                id=\"regusername\"\n                autoComplete=\"off\"\n                name=\"regusername\"\n                value={regusername}\n                onChange={handleChange}\n              />\n              &nbsp;\n\n                <label\n                for=\"photo\"\n                style={{\n                  border: \"1px solid #ccc\",\n                  display: \"inline-block\",\n                  padding: \"6px 12px\",\n                  cursor: \"pointer\",\n                  height:\"55px\",\n                  marginTop:\"15px\",\n                  width:\"50%\"\n                }}\n                class=\"custom-file-upload\"\n              >\n                <AddPhotoAlternateOutlinedIcon  fontSize=\"large\" />\n\n              </label>\n              </Box>\n              \n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                label=\"Phone\"\n                type=\"text\"\n                id=\"phone\"\n                autoComplete=\"off\"\n                name=\"phone\"\n                value={phone}\n                onChange={handleChange}\n              />\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"off\"\n                name=\"regpassword\"\n                value={regpassword}\n                onChange={handleChange}\n              />\n            \n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                hidden\n                type=\"file\"\n                id=\"photo\"\n                autoComplete=\"off\"\n                name=\"photo\"\n                value={photo}\n                onChange={handleChange}\n              />\n              <CountrySelect\n                label=\"Country\"\n                selectedcountry={(e) => setCountry(e.target.value)}\n                name=\"address\"\n              />\n\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                className={classes.submit}\n              >\n                register\n              </Button>\n              <Grid className={classes.link}>\n                <Grid item>\n                  <Button\n                    type=\"submit\"\n                    fullWidth\n                    id=\"backlogin\"\n                    variant=\"contained\"\n                    className={classes.submit}\n                    onClick={toggle}\n                  >\n                    back to login\n                  </Button>\n                </Grid>\n              </Grid>\n            </form>\n          </div>\n        </Container>\n      )}\n    </div>\n  );\n}\n","/home/omar/codi/final/front/src/pages/Profile/Profile.js",["104","105","106","107"],"import PropTypes from \"prop-types\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport SessionContext from \"../../components/session/SessionContext\";\nimport { TextField } from \"@material-ui/core\";\nimport Card from \"@mui/material/Card\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Avatar from \"@mui/material/Avatar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { red } from \"@mui/material/colors\";\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\nimport api from \"../../components/API/API\";\nimport { Button } from \"@material-ui/core\";\nimport Storage from \"../../components/API/Storage\";\nimport { Paper } from \"@mui/material\";\nimport { toast } from \"react-toastify\";\nimport { style } from \"@mui/system\";\nimport {countries} from 'country-data';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\nexport default function BasicTabs() {\n  const altimage = Storage + \"avatar.png\";\n\n  const [value, setValue] = React.useState(0);\n  const {\n    session: { user },\n    actions: { logout },\n  } = useContext(SessionContext);\n  const deleteOrder = async (orderid) => {\n    try {\n      await api.delete(`deleteOrder/${orderid}`);\n    } catch (error) {\n      return toast.error(\"error\");\n    }\n  };\n\n  const { id, email, name, lastname, address, username, photo, phone } = user;\n  const [mypost, setmypost] = useState([]);\n  const [order, setmyorder] = useState([]);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  const About = () => {\n    return (\n      <center className=\"parent-container\">\n        <Paper\n          elevation={3}\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            paddingRight: 20,\n            paddingLeft: 20,\n          }}\n        >\n          <br />\n          <TextField\n            id=\"outlined-basic\"\n            value={email}\n            label=\"email\"\n            variant=\"outlined\"\n          />\n          <br />\n          <TextField\n            id=\"outlined-basic\"\n            value={username}\n            label=\"@username\"\n            variant=\"outlined\"\n          />\n          <br />\n          <TextField\n            id=\"outlined-basic\"\n            value={phone}\n            label=\"phone\"\n            variant=\"outlined\"\n          />\n          <br />\n          <TextField\n            id=\"outlined-basic\"\n            value={address}\n            label=\"address\"\n            variant=\"outlined\"\n          />\n          <br />\n          <Button variant=\"contained\" color=\"primary\">\n            update profile\n          </Button>\n          <br />\n        </Paper>\n      </center>\n    );\n  };\n  const Myorder = () => {\n    if (!order) {\n      return console.log(\"oo\");\n    }\n    return (\n      <div>\n        {order ? (\n          <div className=\"parent-container\">\n            {order.map((myorder) => (\n              <Paper\n                style={{\n                  marginLeft: 10,\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  textAlign: \"center\",\n                  paddingLeft: 20,\n                  paddingRight: 20,\n                }}\n                square={true}\n                elevation={3}\n              >\n                <span># {myorder.post_id}</span>\n                <TextField\n                  align=\"center\"\n                  label=\"Order Status\"\n                  value={myorder.order_status}\n                />\n                <TextField\n                  fullWidth\n                  label=\"Order Date\"\n                  type=\"date\"\n                  value={myorder.date_order}\n                />\n                <TextField label=\"\" value={myorder.space} />\n                <TextField value={myorder.description} />\n                <br />\n                <Button variant=\"contained\" color=\"primary\">\n                  Update Order\n                </Button>\n                &nbsp;\n\n                <Button\n                  onClick={(id) => deleteOrder(myorder.order_id)}\n                  variant=\"contained\"\n                  color=\"Secondary\"\n                >\n                  Cancel\n                </Button>\n                \n                <br />\n              </Paper>\n            ))}\n          </div>\n        ) : (\n          <div>no</div>\n        )}\n      </div>\n    );\n  };\n\n  useEffect(() => {\n    const getpost = async () => {\n      const { data } = await api.get(`/userpost/${id}`);\n      setmypost(data);\n    };\n    const getorder = async () => {\n      const { data } = await api.get(`/myorder/${id}`);\n      setmyorder(data);\n    };\n    getpost();\n    getorder();\n    console.log(altimage);\n  }, [id]);\n\n  const Post = () => {\n    if (!mypost) {\n      return console.log(\"oo\");\n    }\n    return (\n      <div>\n        {mypost ? (\n          <div className=\"parent-container\">\n            {mypost.map((post) => (\n              <Card\n                style={{ marginBottom: 10, marginLeft: 10 }}\n                sx={{ maxWidth: 345 }}\n              >\n                <CardHeader\n                  avatar={\n                    <Avatar\n                      alt={Storage + \"avatar.png\"}\n                      src={Storage + photo}\n                      aria-label=\"recipe\"\n                    ></Avatar>\n                  }\n                  action={\n                    <IconButton aria-label=\"settings\">\n                      <MoreVertIcon />\n                    </IconButton>\n                  }\n                  title={post.date_depart}\n                  subheader={post.date_depart}\n                />\n\n                <CardContent>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    <td> {post.date_arrive}</td>\n                    <br />\n                    {countries[post.to_country].name}\n                        <br />\n\n                        <img\n                          loading=\"lazy\"\n                          width=\"40\"\n                          src={`https://flagcdn.com/w40/${post.to_country.toLowerCase()}.png`}\n                          srcSet={`https://flagcdn.com/w40/${post.to_country.toLowerCase()}.png 2x`}\n                          alt=\"\"\n                        />\n                    <td>{post.to_country} </td>&nbsp;\n                    <td>{post.from_country} </td>\n                    <br />\n                    <td>{post.space}</td>\n                    {post.note}\n                    <td style={{ display: \"grid\" }}>\n                      <br />\n                      <Button variant=\"contained\" color=\"primary\">\n                        Edit\n                      </Button>\n                    </td>\n                  </Typography>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        ) : (\n          <div>no</div>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <Box sx={{ width: \"100%\" }}>\n      <center>\n        <br />\n        <br />\n        <br />\n        <div\n          style={{\n            alignItems: \"center\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            marginTop: 10,\n          }}\n          class=\"profile-img\"\n        >\n          {photo ? (\n           <Avatar\n           alt={Storage + \"avatar.png\"}\n           src={Storage + photo}\n           aria-label=\"recipe\"\n         ></Avatar>\n          ) : (\n            <img\n              style={{\n                maxWidth: 100,\n                maxHeight: 100,\n                borderRadius: \"50%\",\n                borderBlockColor: \"red\",\n              }}\n              src={altimage}\n            />\n          )}\n\n          <br />\n          <Button onClick={logout} variant=\"contained\" color=\"Secondary\">\n            logout\n          </Button>\n          <div class=\"col-md-2\">\n            <br />\n            <span style={{ color: \"blue\" }}>\n              {name}&nbsp;{lastname}\n            </span>\n          </div>\n        </div>\n      </center>\n\n      <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          aria-label=\"basic tabs example\"\n          centered\n        >\n          <Tab style={{ outlineWidth: 0 }} label=\"Posts\" {...a11yProps(0)} />\n          <Tab style={{ outlineWidth: 0 }} label=\"Info\" {...a11yProps(1)} />\n          <Tab style={{ outlineWidth: 0 }} label=\"Orders\" {...a11yProps(2)} />\n        </Tabs>\n      </Box>\n      <TabPanel value={value} index={0}>\n        <Post />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <About />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <Myorder />\n      </TabPanel>\n    </Box>\n  );\n}\n","/home/omar/codi/final/front/src/components/country/countrylist.js",[],"/home/omar/codi/final/front/src/components/API/API.js",[],"/home/omar/codi/final/front/src/pages/Register/Register.js",[],"/home/omar/codi/final/front/src/pages/Home/Home.js",["108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132"],"import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport SessionContext from \"../../components/session/SessionContext\";\nimport { useContext } from \"react\";\nimport { TextField } from \"@mui/material\";\nimport api from \"../../components/API/API\";\nimport { Button } from \"@material-ui/core\";\nimport Paper from \"@mui/material/Paper\";\nimport Box from \"@mui/material/Box\";\nimport { countries } from \"country-data\";\nimport theme from \"../../components/Style/Style\";\n\nimport WhatsAppIcon from \"@mui/icons-material/WhatsApp\";\nimport \"./Home.css\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport FlightTakeoffIcon from \"@mui/icons-material/FlightTakeoff\";\nimport FlightLandIcon from \"@mui/icons-material/FlightLand\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport LocalMallIcon from \"@mui/icons-material/LocalMall\";\nimport Storage from \"../../components/API/Storage\";\nimport FlightIcon from \"@mui/icons-material/Flight\";\nimport moment from \"moment\";\nimport Loading2 from \"../../components/Loading/Loading2\";\nimport { Link } from \"react-router-dom\";\nimport OrderCard from \"../../components/OrderCard/OrderCard\";\nconst useStyles = makeStyles((theme) => ({\n  parent: {\n    marginTop: 20,\n    marginLeft: 20,\n    backgroundColor: \"white\",\n    color: \"#1976d2\",\n  },\n  root: {\n    maxWidth: 100,\n    marginBottom: 20,\n    height: 100,\n    display: \"flex\",\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\", // 16:9\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\n\nexport default function RecipeReviewCard(props) {\n  const [postdata, setData] = useState([]);\n  const [myorder, setorder] = useState([]);\n\n  const [weight, setwheight] = useState(1);\n  const [description, setdescription] = useState(\"\");\n\n  async function neworder(postid) {\n    const today = moment().format(\"YYYY-MM-DD\");\n\n    const body = {\n      user_re_id: id,\n      post_id: postid,\n      order_status: \"pending\",\n      date_order: today,\n\n      space: weight,\n\n      description: description,\n    };\n    try {\n      await api.post(\"/orders\", body);\n      toast(\"order  sended\");\n    } catch (error) {\n      toast.error(\"order not sended\");\n    }\n  }\n\n  const {\n    session: { user },\n  } = useContext(SessionContext);\n\n  const { id, photo } = user;\n  const classes = useStyles();\n\n  useEffect(() => {\n    const getPost = async () => {\n      const { data } = await api.get(`/filterpost/${id}`);\n      setData(data);\n    };\n    const getorder = async () => {\n      const { data } = await api.get(`/myorder/${id}`);\n      setorder(data);\n    };\n    getorder();\n    getPost();\n  }, [id]);\n  if (postdata.length > 0)\n    return (\n      <center>\n        <br />\n        <br />\n        <br />\n\n        <div className=\"parent-container\">\n          {postdata.map((post) => {\n            return (\n              <OrderCard\n                v={post.id}\n                fullname={post.name + \" \" + post.lastname}\n                change={(e) => console.log(e.target.value)}\n                post_date={post.post_date}\n                avatar={Storage + post.photo}\n                from_country={countries[post.from_country].name}\n                to_country={countries[post.to_country].name}\n                from_country_code={post.from_country}\n                to_country_code={post.to_country}\n              />\n            );\n          })}\n        </div>\n      </center>\n    );\n  else {\n    return (\n      <>\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <Loading2 />\n      </>\n    );\n  }\n}\n","/home/omar/codi/final/front/src/pages/Post/Createpost.js",["133","134","135"],"import * as React from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport CountrySelect from \"../../components/country/countrylist\";\nimport moment from \"moment\";\nimport api from \"../../components/API/API\";\nimport SessionContext from \"../../components/session/SessionContext\";\nimport { useContext, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport NoteAltSharpIcon from '@mui/icons-material/NoteAltSharp';\nimport FlightTakeoffSharpIcon from '@mui/icons-material/FlightTakeoffSharp';\nimport Loading from \"../../components/Loading/Loading\";\n\n\n\n\nconst theme = createTheme();\n\nexport default function Create_Post(props) {\n\n  const {\n    session: { user },\n  } = useContext(SessionContext);\n\n  const { id} = user;\n  const today = moment().format(\"YYYY.MM.DD\");\n  const nextweek=moment().add(7, \"days\").format(\"YYYY-MM-DD\")\n  const handleChange = (event) => {\n    let value = event.target.value;\n    let name = event.target.name;\n\n    setstate((prevalue) => {\n      return {\n        ...prevalue, // Spread Operator\n        [name]: value,\n      };\n    });\n  };\n  let [state, setstate] = useState({\n    user_id: \"\",\n    space: \"\",\n    title: \"\",\n    from_country: \"\",\n    to_country: \"\",\n    date_depart: today,\n    date_arrive:nextweek ,\n    note: \"\",\n  });\n  const handleSubmit = async (event)  => {\n    event.preventDefault();\n\n    const body = {\n      user_id: id,\n      space: state.space,\n      \"cost\": \"12\",\n      from_country: state.from_country,\n      to_country: state.to_country,\n      date_depart: state.date_depart,\n      date_arrive: state.date_arrive,\n      note: state.note,\n    };\n    console.log(body);\n\n    try {\n     await api.post(\"/blogs\", body);\n      props.history.push('/profile');\n\n    } catch (error) {\n\n      return toast.error(\"Please Enter Valid Data\");\n      \n    }\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n            <NoteAltSharpIcon fontSize=\"large\" style={{marginTop:9}} color=\"primary\" />\n          <Typography component=\"h1\" variant=\"h5\">\n\n            Create New Post\n            <Loading  plane=\"50\"/>\n\n          </Typography>\n          <Box\n            component=\"form\"\n            noValidate\n            onSubmit={handleSubmit}\n            sx={{ mt: 3 }}\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <CountrySelect\n                  label=\"From Country\"\n                  selectedcountry={handleChange}\n                  name=\"from_country\"\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <CountrySelect\n                  label=\"To Country\"\n                  selectedcountry={handleChange}\n                  name=\"to_country\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  type=\"date\"\n                  label=\"Date Departure\"\n                  defaultValue={moment().format(\"YYYY-MM-DD\")}\n                  fullWidth\n                  id=\"email\"\n                  name=\"date_depart\"\n                  autoComplete=\"off\"\n                  onChange={handleChange}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  name=\"date_arrive\"\n                  type=\"date\"\n                  defaultValue={moment().add(7, \"days\").format(\"YYYY-MM-DD\")}\n                  id=\"password\"\n                  label=\"Date\"\n                  autoComplete=\"off\"\n                  onChange={handleChange}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  onChange={handleChange}\n                  required\n                  fullWidth\n                  name=\"space\"\n                  type=\"number\"\n                  defaultValue=\"1\"\n                  id=\"password\"\n                  label=\"availble space\"\n                  autoComplete=\"off\"\n                  onInput={(e) => {\n                    e.target.value = Math.max(0, parseInt(e.target.value))\n                      .toString()\n                      .slice(0, 2);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  name=\"note\"\n                  type=\"text\"\n                  multiline\n                  id=\"password\"\n                  label=\"Note\"\n                  autoComplete=\"off\"\n                  onChange={handleChange}\n                />\n              </Grid>\n            </Grid>\n            <Button\n              style={{ marginTop: 10 }}\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >              \n\n              Create Post \n            </Button>\n            <Grid container justifyContent=\"flex-end\">\n              <Grid item></Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}\n","/home/omar/codi/final/front/src/components/API/Storage.js",[],"/home/omar/codi/final/front/src/components/API/sessionapi.js",[],"/home/omar/codi/final/front/src/components/Loading/Loading.js",[],"/home/omar/codi/final/front/src/components/Loading/Loading2.js",[],"/home/omar/codi/final/front/src/components/Style/Style.js",[],"/home/omar/codi/final/front/src/components/OrderCard/OrderCard.js",["136","137","138","139","140","141","142","143","144","145"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport { countries } from \"country-data\";\nimport { TextField } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"auto\",\n    margin: \"20px 20px\",\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\", // 16:9\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  avatar: {\n    border: \" 1px solid #007bff\",\n  },\n}));\n\nexport default function RecipeReviewCard(props) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  return (\n    <Card elevation={3} className={classes.root}>\n      <CardHeader\n        avatar={\n          <Avatar\n            src={props.avatar}\n            aria-label=\"recipe\"\n            className={classes.avatar}\n          ></Avatar>\n        }\n        action={\n          <IconButton aria-label=\"settings\">\n            <MoreVertIcon />\n          </IconButton>\n        }\n        title={props.fullname}\n        subheader={props.post_date}\n      />\n\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          <tr>\n            <td>{props.from_country}</td> &nbsp;\n           \n           \n            <td>{props.to_country}</td>\n          </tr>\n          <tr>\n           \n            <td> <img\n              loading=\"lazy\"\n              width=\"40\"\n              height=\"20\"\n              src={`https://flagcdn.com/w40/${props.from_country_code.toLowerCase()}.png`}\n              srcSet={`https://flagcdn.com/w40/${props.from_country_code.toLowerCase()}.png `}\n              alt=\"\"\n            /></td>\n                        &nbsp;\n\n             <td> <img\n              loading=\"lazy\"\n              width=\"40\"\n              height=\"20\"\n              src={`https://flagcdn.com/w40/${props.to_country_code.toLowerCase()}.png`}\n              srcSet={`https://flagcdn.com/w40/${props.to_country_code.toLowerCase()}.png`}\n              alt=\"\"\n            /></td>\n          </tr>\n        <TextField />\n        </Typography>\n      </CardContent>\n     \n    </Card>\n  );\n}\n",{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":111,"column":9,"nodeType":"152","messageId":"153","endLine":111,"endColumn":13},{"ruleId":"150","severity":1,"message":"154","line":18,"column":8,"nodeType":"152","messageId":"153","endLine":18,"endColumn":15},{"ruleId":"150","severity":1,"message":"155","line":63,"column":23,"nodeType":"152","messageId":"153","endLine":63,"endColumn":31},{"ruleId":"150","severity":1,"message":"156","line":87,"column":5,"nodeType":"152","messageId":"153","endLine":87,"endColumn":15},{"ruleId":"150","severity":1,"message":"151","line":125,"column":11,"nodeType":"152","messageId":"153","endLine":125,"endColumn":15},{"ruleId":"150","severity":1,"message":"157","line":14,"column":10,"nodeType":"152","messageId":"153","endLine":14,"endColumn":13},{"ruleId":"150","severity":1,"message":"158","line":21,"column":10,"nodeType":"152","messageId":"153","endLine":21,"endColumn":15},{"ruleId":"159","severity":1,"message":"160","line":201,"column":6,"nodeType":"161","endLine":201,"endColumn":10,"suggestions":"162"},{"ruleId":"163","severity":1,"message":"164","line":292,"column":13,"nodeType":"165","endLine":300,"endColumn":15},{"ruleId":"150","severity":1,"message":"166","line":3,"column":8,"nodeType":"152","messageId":"153","endLine":3,"endColumn":12},{"ruleId":"150","severity":1,"message":"167","line":4,"column":8,"nodeType":"152","messageId":"153","endLine":4,"endColumn":18},{"ruleId":"150","severity":1,"message":"168","line":5,"column":8,"nodeType":"152","messageId":"153","endLine":5,"endColumn":19},{"ruleId":"150","severity":1,"message":"169","line":6,"column":8,"nodeType":"152","messageId":"153","endLine":6,"endColumn":14},{"ruleId":"150","severity":1,"message":"170","line":7,"column":8,"nodeType":"152","messageId":"153","endLine":7,"endColumn":18},{"ruleId":"150","severity":1,"message":"171","line":8,"column":8,"nodeType":"152","messageId":"153","endLine":8,"endColumn":18},{"ruleId":"150","severity":1,"message":"172","line":10,"column":8,"nodeType":"152","messageId":"153","endLine":10,"endColumn":20},{"ruleId":"150","severity":1,"message":"173","line":13,"column":10,"nodeType":"152","messageId":"153","endLine":13,"endColumn":19},{"ruleId":"150","severity":1,"message":"174","line":15,"column":10,"nodeType":"152","messageId":"153","endLine":15,"endColumn":16},{"ruleId":"150","severity":1,"message":"175","line":16,"column":8,"nodeType":"152","messageId":"153","endLine":16,"endColumn":13},{"ruleId":"150","severity":1,"message":"176","line":17,"column":8,"nodeType":"152","messageId":"153","endLine":17,"endColumn":11},{"ruleId":"150","severity":1,"message":"177","line":19,"column":8,"nodeType":"152","messageId":"153","endLine":19,"endColumn":13},{"ruleId":"150","severity":1,"message":"178","line":21,"column":8,"nodeType":"152","messageId":"153","endLine":21,"endColumn":20},{"ruleId":"150","severity":1,"message":"179","line":25,"column":8,"nodeType":"152","messageId":"153","endLine":25,"endColumn":25},{"ruleId":"150","severity":1,"message":"180","line":26,"column":8,"nodeType":"152","messageId":"153","endLine":26,"endColumn":22},{"ruleId":"150","severity":1,"message":"181","line":27,"column":8,"nodeType":"152","messageId":"153","endLine":27,"endColumn":16},{"ruleId":"150","severity":1,"message":"182","line":28,"column":8,"nodeType":"152","messageId":"153","endLine":28,"endColumn":21},{"ruleId":"150","severity":1,"message":"183","line":30,"column":8,"nodeType":"152","messageId":"153","endLine":30,"endColumn":18},{"ruleId":"150","severity":1,"message":"184","line":33,"column":10,"nodeType":"152","messageId":"153","endLine":33,"endColumn":14},{"ruleId":"150","severity":1,"message":"185","line":69,"column":10,"nodeType":"152","messageId":"153","endLine":69,"endColumn":17},{"ruleId":"150","severity":1,"message":"186","line":71,"column":18,"nodeType":"152","messageId":"153","endLine":71,"endColumn":28},{"ruleId":"150","severity":1,"message":"187","line":72,"column":23,"nodeType":"152","messageId":"153","endLine":72,"endColumn":37},{"ruleId":"150","severity":1,"message":"188","line":74,"column":18,"nodeType":"152","messageId":"153","endLine":74,"endColumn":26},{"ruleId":"150","severity":1,"message":"189","line":99,"column":15,"nodeType":"152","messageId":"153","endLine":99,"endColumn":20},{"ruleId":"150","severity":1,"message":"190","line":100,"column":9,"nodeType":"152","messageId":"153","endLine":100,"endColumn":16},{"ruleId":"150","severity":1,"message":"169","line":2,"column":8,"nodeType":"152","messageId":"153","endLine":2,"endColumn":14},{"ruleId":"150","severity":1,"message":"191","line":8,"column":8,"nodeType":"152","messageId":"153","endLine":8,"endColumn":24},{"ruleId":"150","severity":1,"message":"192","line":19,"column":8,"nodeType":"152","messageId":"153","endLine":19,"endColumn":30},{"ruleId":"150","severity":1,"message":"193","line":3,"column":8,"nodeType":"152","messageId":"153","endLine":3,"endColumn":12},{"ruleId":"150","severity":1,"message":"194","line":6,"column":8,"nodeType":"152","messageId":"153","endLine":6,"endColumn":17},{"ruleId":"150","severity":1,"message":"195","line":8,"column":8,"nodeType":"152","messageId":"153","endLine":8,"endColumn":19},{"ruleId":"150","severity":1,"message":"196","line":9,"column":8,"nodeType":"152","messageId":"153","endLine":9,"endColumn":16},{"ruleId":"150","severity":1,"message":"157","line":13,"column":10,"nodeType":"152","messageId":"153","endLine":13,"endColumn":13},{"ruleId":"150","severity":1,"message":"197","line":14,"column":8,"nodeType":"152","messageId":"153","endLine":14,"endColumn":20},{"ruleId":"150","severity":1,"message":"198","line":15,"column":8,"nodeType":"152","messageId":"153","endLine":15,"endColumn":17},{"ruleId":"150","severity":1,"message":"199","line":16,"column":8,"nodeType":"152","messageId":"153","endLine":16,"endColumn":22},{"ruleId":"150","severity":1,"message":"200","line":18,"column":10,"nodeType":"152","messageId":"153","endLine":18,"endColumn":19},{"ruleId":"150","severity":1,"message":"201","line":49,"column":9,"nodeType":"152","messageId":"153","endLine":49,"endColumn":26},"no-native-reassign",["202"],"no-negated-in-lhs",["203"],"no-unused-vars","'body' is assigned a value but never used.","Identifier","unusedVar","'Loading' is defined but never used.","'register' is assigned a value but never used.","'regcountry' is assigned a value but never used.","'red' is defined but never used.","'style' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'altimage'. Either include it or remove the dependency array.","ArrayExpression",["204"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Card' is defined but never used.","'CardHeader' is defined but never used.","'CardContent' is defined but never used.","'Avatar' is defined but never used.","'IconButton' is defined but never used.","'Typography' is defined but never used.","'MoreVertIcon' is defined but never used.","'TextField' is defined but never used.","'Button' is defined but never used.","'Paper' is defined but never used.","'Box' is defined but never used.","'theme' is defined but never used.","'WhatsAppIcon' is defined but never used.","'FlightTakeoffIcon' is defined but never used.","'FlightLandIcon' is defined but never used.","'SendIcon' is defined but never used.","'LocalMallIcon' is defined but never used.","'FlightIcon' is defined but never used.","'Link' is defined but never used.","'myorder' is assigned a value but never used.","'setwheight' is assigned a value but never used.","'setdescription' is assigned a value but never used.","'neworder' is defined but never used.","'photo' is assigned a value but never used.","'classes' is assigned a value but never used.","'LockOutlinedIcon' is defined but never used.","'FlightTakeoffSharpIcon' is defined but never used.","'clsx' is defined but never used.","'CardMedia' is defined but never used.","'CardActions' is defined but never used.","'Collapse' is defined but never used.","'FavoriteIcon' is defined but never used.","'ShareIcon' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'countries' is defined but never used.","'handleExpandClick' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"205","fix":"206"},"Update the dependencies array to be: [altimage, id]",{"range":"207","text":"208"},[5446,5450],"[altimage, id]"]