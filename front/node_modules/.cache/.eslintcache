[{"/home/omar/codi/final/front/src/index.js":"1","/home/omar/codi/final/front/src/App.js":"2","/home/omar/codi/final/front/src/reportWebVitals.js":"3","/home/omar/codi/final/front/src/components/Routes.js":"4","/home/omar/codi/final/front/src/components/Header.js":"5","/home/omar/codi/final/front/src/components/session/SessionProvider.js":"6","/home/omar/codi/final/front/src/components/session/SessionContext.js":"7","/home/omar/codi/final/front/src/cookies.js":"8","/home/omar/codi/final/front/src/pages/NotFound.js":"9","/home/omar/codi/final/front/src/pages/Account.js":"10","/home/omar/codi/final/front/src/pages/Profile/Profile.js":"11","/home/omar/codi/final/front/src/components/country/countrylist.js":"12","/home/omar/codi/final/front/src/components/API/API.js":"13","/home/omar/codi/final/front/src/pages/Register/Register.js":"14","/home/omar/codi/final/front/src/pages/Home/Home.js":"15","/home/omar/codi/final/front/src/pages/Post/Createpost.js":"16","/home/omar/codi/final/front/src/components/API/Storage.js":"17","/home/omar/codi/final/front/src/components/API/sessionapi.js":"18","/home/omar/codi/final/front/src/components/Loading/Loading.js":"19"},{"size":567,"mtime":1631712288351,"results":"20","hashOfConfig":"21"},{"size":533,"mtime":1631712288351,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1631712288351,"results":"23","hashOfConfig":"21"},{"size":2055,"mtime":1632202052204,"results":"24","hashOfConfig":"21"},{"size":1690,"mtime":1632202000917,"results":"25","hashOfConfig":"21"},{"size":3451,"mtime":1632340411669,"results":"26","hashOfConfig":"21"},{"size":109,"mtime":1632303675189,"results":"27","hashOfConfig":"21"},{"size":783,"mtime":1631712288351,"results":"28","hashOfConfig":"21"},{"size":258,"mtime":1631712288351,"results":"29","hashOfConfig":"21"},{"size":10389,"mtime":1632338890527,"results":"30","hashOfConfig":"21"},{"size":8975,"mtime":1632469092060,"results":"31","hashOfConfig":"21"},{"size":15500,"mtime":1632229371877,"results":"32","hashOfConfig":"21"},{"size":333,"mtime":1632310117534,"results":"33","hashOfConfig":"21"},{"size":3419,"mtime":1632037204337,"results":"34","hashOfConfig":"21"},{"size":6989,"mtime":1632469557736,"results":"35","hashOfConfig":"21"},{"size":5804,"mtime":1632467550786,"results":"36","hashOfConfig":"21"},{"size":148,"mtime":1632310067823,"results":"37","hashOfConfig":"21"},{"size":111,"mtime":1632310175428,"results":"38","hashOfConfig":"21"},{"size":377,"mtime":1632339598223,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"lyzmcz",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/home/omar/codi/final/front/src/index.js",[],["81","82"],"/home/omar/codi/final/front/src/App.js",[],"/home/omar/codi/final/front/src/reportWebVitals.js",[],"/home/omar/codi/final/front/src/components/Routes.js",[],"/home/omar/codi/final/front/src/components/Header.js",[],"/home/omar/codi/final/front/src/components/session/SessionProvider.js",["83"],"import React, { useState, useEffect } from \"react\";\nimport SessionContext from \"./SessionContext\";\nimport { setCookie, getCookie, removeCookie } from \"../../cookies\";\nimport { toast } from \"react-toastify\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router\";\nimport sessionapi from '../API/sessionapi'\n\nexport default function SessionProvider({ children }) {\n  let token = getCookie(\"token\");\n  const [loggedin, setLoggedin] = useState(false);\n  const [session, setValue] = useState({\n    user: {\n      token: getCookie(\"token\"),\n    },\n  });\n\n  useEffect(() => {\n    function initializeSession() {\n      let token = getCookie(\"token\");\n      if (token)\n        fetch(`${sessionapi}api/user`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        })\n          .then((res) => res.json())\n          .then((res) => {\n            if (!res) {\n              return <Redirect to=\"/account\" />;\n            }\n            let role=res.role\n\n            let user = { ...res, token ,role};\n            setLoggedin(true);\n            updateSession({ user });\n          });\n    }\n    initializeSession();\n  }, [token]);\n\n  function updateSession(nextSession) {\n    let value =\n      typeof nextSession === \"function\"\n        ? nextSession\n        : (prevSession) => ({ ...prevSession, ...nextSession });\n    setValue(value);\n  }\n\n  async function login({ email, password }) {\n    // try to login\n    let {\n      error,id = 4,\n      token,\n    } = await fetch(`${sessionapi}api/login`, {\n      method: \"post\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password }),\n    }).then((res) => res.json());\n\n    // return from the function if you have an error\n    // if (disabled || !token) return toast.error(disabled);\n\n    if (error || !token) return toast.error(error);\n\n    // get the data of the loggedin user\n    setCookie(\"token\", token);\n    setCookie(\"id\", id);\n\n    let result = await fetch(`${sessionapi}api/user`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    }).then((res) => res.json());\n    let role = result.role;\n    console.log(result);\n    if (!result) {\n      logout()\n    }\n\n    let user = { ...result, token, role };\n\n    updateSession({ user });\n    // toast(`Welcome ${user.name}!`);\n  }\n\n  function logout() {\n    setLoggedin(false);\n    removeCookie(\"id\");\n    removeCookie(\"token\");\n    updateSession({ user: { token: null } });\n\n  }\n  async function register(email, username, password) {\n    let req = {\n      username: username,\n      email: email,\n      password: password,\n      role: \"user\",\n      name: \"\",\n      lastname: \"\",\n      status: \"active\",\n      address: \"lebanon\",\n      phone: \"0\",\n      photo: \"kgOrcxjkELpYSGkSj2fsvRuAqICRZm1n5FUqyc3S.png\",\n\n    };\n    let body={\n      \"username\": \"12\",\n        \"email\": \"omar\",\n        \"photo\": \"kgOrcxjkELpYSGkSj2fsvRuAqICRZm1n5FUqyc3S.png\",\n        password: password,\n\n    }\n    console.log(req);\n    let result = await axios.post(`${sessionapi}api/uploadimage`, req);\n\n    console.log(result);\n\n    // return from the function if you have an error\n    // if (error || !token) return toast.error(error);\n  }\n\n  const context = {\n    session,\n    actions: {\n      login,\n      logout,\n      register,\n      loggedin,\n    },\n  };\n\n  return (\n    <SessionContext.Provider value={context}>\n      {children}\n    </SessionContext.Provider>\n  );\n}\n","/home/omar/codi/final/front/src/components/session/SessionContext.js",[],"/home/omar/codi/final/front/src/cookies.js",[],"/home/omar/codi/final/front/src/pages/NotFound.js",[],"/home/omar/codi/final/front/src/pages/Account.js",["84","85","86","87"],"import Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport React, { useContext, useState } from \"react\";\nimport SessionContext from \"../components/session/SessionContext\";\nimport travel from \"../assets/travel.png\";\nimport api from \"../components/API/API\";\nimport CountrySelect from \"../components/country/countrylist\";\nimport { Box } from \"@mui/system\";\nimport AddPhotoAlternateOutlinedIcon from '@mui/icons-material/AddPhotoAlternateOutlined';\nimport { toast } from \"react-toastify\";\nimport Loading from \"../components/Loading/Loading\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    backgroundColor: \"#1976d2\",\n    color: \"white\",\n    \"&:hover\": {\n      color: \"black\",\n    },\n  },\n  link: {\n    color: \"#146eb4\",\n  },\n}));\n\nexport default function SignIn() {\n  const [account, setaccount] = useState(true);\n  const [selectdcountry, setCountry] = useState(\"\");\n  const toggle = () => {\n    if (account) {\n      setaccount(false);\n\n      return;\n    } else {\n      setaccount(true);\n    }\n  };\n\n  const classes = useStyles();\n  const {\n    actions: { login, register },\n  } = useContext(SessionContext);\n\n  const [state, setValue] = useState({\n    email: \"\",\n    password: \"\",\n    regpassword: \"\",\n    regemail: \"\",\n    regusername: \"\",\n    phone: \"\",\n\n    photo: \"\",\n    reglastname: \"\",\n  });\n\n  const {\n    email,\n    password,\n    regemail,\n    regusername,\n    regpassword,\n    photo,\n    regname,\n    reglastname,\n    regcountry,\n    phone,\n  } = state;\n\n  function setState(nextState) {\n    setValue((prevState) => ({\n      ...prevState,\n      ...nextState,\n    }));\n  }\n\n  function handleChange(e) {\n    let { name, value } = e.target;\n    setState({ [name]: value });\n  }\n\n  async function handleLogin(e) {\n    e.nativeEvent.preventDefault();\n    login(state);\n  }\n\n  const handleRegister = async (event) => {\n    event.preventDefault();\n    const fileInput = document.querySelector(\"#photo\");\n    const formData = new FormData();\n    formData.append(\"name\", regname);\n    formData.append(\"lastname\", reglastname);\n    formData.append(\"username\", regusername);\n    formData.append(\"phone\", phone);\n\n    formData.append(\"email\", regemail);\n    formData.append(\"password\", regpassword);\n    formData.append(\"status\", \"active\");\n\n    formData.append(\"photo\", fileInput.files[0]);\n    formData.append(\"role\", \"user\");\n\n    formData.append(\"address\", selectdcountry);\n    const body = {\n      name: regname,\n      lastname: reglastname,\n      username: regusername,\n      phone: phone,\n      email: regemail,\n      password: regpassword,\n      status: regpassword,\n      photo: fileInput,\n      role: \"user\",\n    };\n    try {\n      await api.post(\"/uploadimage\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n      setaccount(true);\n      toast.success(\"saved\")\n      \n    } catch (error) {\n      toast.error(\"Please Your Inputs\")\n\n      \n    }\n\n  \n  };\n\n  return (\n    <div>\n      {account ? (\n        <Container className={classes.root} component=\"main\" maxWidth=\"xs\">\n          <CssBaseline />\n\n          <div className={classes.paper}>\n            {/* <Avatar className={classes.avatar}>\n          </Avatar> */}\n            <img src={travel} alt=\"\" style={{ maxHeight: 100 }} srcset=\"\" />\n            <Typography component=\"h1\" variant=\"h5\">\n              Log In To Your Account\n            </Typography>\n            <form onSubmit={handleLogin} className={classes.form}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                autoComplete=\"off\"\n                autoFocus\n                name=\"email\"\n                value={email}\n                onChange={handleChange}\n              />\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                name=\"password\"\n                value={password}\n                onChange={handleChange}\n              />\n\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                className={classes.submit}\n              >\n                Sign In\n              </Button>\n              <Grid className={classes.link}>\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  onClick={toggle}\n                  variant=\"contained\"\n                  className={classes.submit}\n                >\n                  Create new user\n                </Button>\n              </Grid>\n            </form>\n          </div>\n        </Container>\n      ) : (\n        <Container className={classes.root} component=\"main\" maxWidth=\"xs\">\n          <CssBaseline />\n          <div className={classes.paper}>\n            <Avatar className={classes.avatar}>\n            </Avatar>\n            \n            <Typography component=\"h1\" variant=\"h5\">\n              Create New Account\n            </Typography>\n            <form\n              onSubmit={handleRegister}\n              enctype=\"multipart/form-data\"\n              className={classes.form}\n            >\n              <Box style={{display:\"flex\"}}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                \n                label=\"First Name\"\n                autoComplete=\"off\"\n                autoFocus\n                name=\"regname\"\n                value={regname}\n                onChange={handleChange}\n              />\n              &nbsp;\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                label=\"Last Name\"\n                autoComplete=\"off\"\n                \n                name=\"reglastname\"\n                value={reglastname}\n                onChange={handleChange}\n              />\n\n              </Box>\n             \n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                autoComplete=\"off\"\n                \n                name=\"regemail\"\n                value={regemail}\n                onChange={handleChange}\n              />\n              <Box style={{display:\"flex\" ,alignItems:\"center\"}}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                label=\"Username\"\n                type=\"text\"\n                id=\"regusername\"\n                autoComplete=\"off\"\n                name=\"regusername\"\n                value={regusername}\n                onChange={handleChange}\n              />\n              &nbsp;\n\n                <label\n                for=\"photo\"\n                style={{\n                  border: \"1px solid #ccc\",\n                  display: \"inline-block\",\n                  padding: \"6px 12px\",\n                  cursor: \"pointer\",\n                  height:\"55px\",\n                  marginTop:\"15px\",\n                  width:\"50%\"\n                }}\n                class=\"custom-file-upload\"\n              >\n                <AddPhotoAlternateOutlinedIcon  fontSize=\"large\" />\n\n              </label>\n              </Box>\n              \n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                label=\"Phone\"\n                type=\"text\"\n                id=\"phone\"\n                autoComplete=\"off\"\n                name=\"phone\"\n                value={phone}\n                onChange={handleChange}\n              />\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"off\"\n                name=\"regpassword\"\n                value={regpassword}\n                onChange={handleChange}\n              />\n            \n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                hidden\n                type=\"file\"\n                id=\"photo\"\n                autoComplete=\"off\"\n                name=\"photo\"\n                value={photo}\n                onChange={handleChange}\n              />\n              <CountrySelect\n                label=\"Country\"\n                selectedcountry={(e) => setCountry(e.target.value)}\n                name=\"address\"\n              />\n\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                className={classes.submit}\n              >\n                register\n              </Button>\n              <Grid className={classes.link}>\n                <Grid item>\n                  <Button\n                    type=\"submit\"\n                    fullWidth\n                    id=\"backlogin\"\n                    variant=\"contained\"\n                    className={classes.submit}\n                    onClick={toggle}\n                  >\n                    back to login\n                  </Button>\n                </Grid>\n              </Grid>\n            </form>\n          </div>\n        </Container>\n      )}\n    </div>\n  );\n}\n","/home/omar/codi/final/front/src/pages/Profile/Profile.js",["88","89","90","91","92"],"/home/omar/codi/final/front/src/components/country/countrylist.js",[],"/home/omar/codi/final/front/src/components/API/API.js",[],"/home/omar/codi/final/front/src/pages/Register/Register.js",[],"/home/omar/codi/final/front/src/pages/Home/Home.js",["93","94","95","96","97"],"/home/omar/codi/final/front/src/pages/Post/Createpost.js",["98","99","100"],"/home/omar/codi/final/front/src/components/API/Storage.js",[],"/home/omar/codi/final/front/src/components/API/sessionapi.js",[],"/home/omar/codi/final/front/src/components/Loading/Loading.js",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":110,"column":9,"nodeType":"107","messageId":"108","endLine":110,"endColumn":13},{"ruleId":"105","severity":1,"message":"109","line":18,"column":8,"nodeType":"107","messageId":"108","endLine":18,"endColumn":15},{"ruleId":"105","severity":1,"message":"110","line":63,"column":23,"nodeType":"107","messageId":"108","endLine":63,"endColumn":31},{"ruleId":"105","severity":1,"message":"111","line":87,"column":5,"nodeType":"107","messageId":"108","endLine":87,"endColumn":15},{"ruleId":"105","severity":1,"message":"106","line":125,"column":11,"nodeType":"107","messageId":"108","endLine":125,"endColumn":15},{"ruleId":"105","severity":1,"message":"112","line":14,"column":10,"nodeType":"107","messageId":"108","endLine":14,"endColumn":13},{"ruleId":"105","severity":1,"message":"113","line":21,"column":10,"nodeType":"107","messageId":"108","endLine":21,"endColumn":15},{"ruleId":"114","severity":1,"message":"115","line":198,"column":6,"nodeType":"116","endLine":198,"endColumn":10,"suggestions":"117"},{"ruleId":"118","severity":1,"message":"119","line":273,"column":13,"nodeType":"120","endLine":281,"endColumn":15},{"ruleId":"118","severity":1,"message":"119","line":283,"column":13,"nodeType":"120","endLine":291,"endColumn":15},{"ruleId":"105","severity":1,"message":"121","line":16,"column":8,"nodeType":"107","messageId":"108","endLine":16,"endColumn":13},{"ruleId":"105","severity":1,"message":"122","line":17,"column":8,"nodeType":"107","messageId":"108","endLine":17,"endColumn":11},{"ruleId":"105","severity":1,"message":"123","line":25,"column":8,"nodeType":"107","messageId":"108","endLine":25,"endColumn":21},{"ruleId":"105","severity":1,"message":"124","line":62,"column":10,"nodeType":"107","messageId":"108","endLine":62,"endColumn":17},{"ruleId":"105","severity":1,"message":"125","line":94,"column":15,"nodeType":"107","messageId":"108","endLine":94,"endColumn":20},{"ruleId":"105","severity":1,"message":"126","line":2,"column":8,"nodeType":"107","messageId":"108","endLine":2,"endColumn":14},{"ruleId":"105","severity":1,"message":"127","line":8,"column":8,"nodeType":"107","messageId":"108","endLine":8,"endColumn":24},{"ruleId":"105","severity":1,"message":"128","line":19,"column":8,"nodeType":"107","messageId":"108","endLine":19,"endColumn":30},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"no-unused-vars","'body' is assigned a value but never used.","Identifier","unusedVar","'Loading' is defined but never used.","'register' is assigned a value but never used.","'regcountry' is assigned a value but never used.","'red' is defined but never used.","'style' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'altimage'. Either include it or remove the dependency array.","ArrayExpression",["131"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Paper' is defined but never used.","'Box' is defined but never used.","'LocalMallIcon' is defined but never used.","'myorder' is assigned a value but never used.","'photo' is assigned a value but never used.","'Avatar' is defined but never used.","'LockOutlinedIcon' is defined but never used.","'FlightTakeoffSharpIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"132","fix":"133"},"Update the dependencies array to be: [altimage, id]",{"range":"134","text":"135"},[5359,5363],"[altimage, id]"]